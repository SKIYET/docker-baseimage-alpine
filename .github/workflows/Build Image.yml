name: 构建 Docker 镜像

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *'
    
jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      # 检出代码
      - name: 检出代码
        uses: actions/checkout@v3
      
      # 设置 QEMU
      - name: 设置 QEMU
        uses: docker/setup-qemu-action@v2
      
      # 设置 Docker Buildx
      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 登录到 Docker Hub
      - name: 登录到 Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      # 设置版本号
      - name: 设置版本号
        id: set-version
        run: |
          VERSION=$(curl -s https://nl.alpinelinux.org/alpine/ | grep -o 'v[0-9]\+\.[0-9]\+' | sort -Vr | head -n 1 | sed 's/v//')
          if [ -z "$VERSION" ]; then
            echo "Failed to fetch Alpine version"
            exit 1
          fi
          CURRENT_VERSION=$(cat version.txt)
          if [[ "$VERSION" == "$CURRENT_VERSION" ]]; then
            echo "::set-output name=status::no-change"
          else
            echo "::set-output name=version::$VERSION"
            echo "::set-output name=status::success"
          fi

      # 更新版本号
      - name: 更新版本号
        if: steps.set-version.outputs.status == 'success'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          DATE=$(date +"%Y-%m-%d")
          VERSION=${{ steps.set-version.outputs.version }}
          echo "Alpine version: $VERSION" > version.txt
          echo -e "### $DATE 更新\nAlpine v$VERSION\n" >> README.md
          git commit -am "$DATE 更新 Alpine v$VERSION"
          git remote set-url origin https://x-access-token:${{ secrets.GH_PAT }}@github.com/SuperNG6/docker-baseimage-alpine.git
          git push


      # 构建并推送 Docker 镜像
      - name: 构建 Docker 镜像
        if: steps.set-version.outputs.status == 'success'
        uses: docker/build-push-action@v2
        with:
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          build-args: |
            VERSION=${{ steps.set-version.outputs.version }}
          tags: |
            superng6/alpine:${{ steps.set-version.outputs.version }}
            superng6/alpine:latest

      # 更新 Docker Hub 描述
      - name: 更新 Docker Hub 描述
        if: steps.set-version.outputs.status == 'success'
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          DOCKERHUB_REPO: superng6/alpine
        run: |
          # 安装 jq
          sudo apt-get install -y jq
          # 获取 README.md 的内容
          DESCRIPTION=$(<README.md)
          # 用 jq 构造 JSON 文件
          echo "${DESCRIPTION}" | jq -Rs . > description.json
          # 获取 Docker Hub 的 token
          TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d '{"username": "'${DOCKERHUB_USERNAME}'", "password": "'${DOCKERHUB_TOKEN}'"}' https://hub.docker.com/v2/users/login/ | jq -r .token)
          # 更新 Docker Hub 描述
          curl -s -H "Authorization: JWT ${TOKEN}" -X PATCH -d @description.json https://hub.docker.com/v2/repositories/${DOCKERHUB_REPO}/
